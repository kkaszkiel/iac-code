---
- hosts: aws_ec2
  become: yes
 
  handlers:
  - name: Reload Nginx
    service:
      name: nginx
      state: reloaded


  tasks:
    
  - name: Install the latest version of Nginx
    ansible.builtin.dnf:
      name: nginx
      state: latest

  - name: Enable service nginx and ensure it is not masked
    ansible.builtin.systemd:
      name: nginx
      enabled: true
      masked: no

  - name: Make sure a service unit is running
    ansible.builtin.systemd:
      state: started
      name: nginx




  - name: Install the latest version of Cronie
    ansible.builtin.dnf:
      name: cronie
      state: latest

  - name: Enable service cronie and ensure it is not masked
    ansible.builtin.systemd:
      name: crond
      enabled: true
      masked: no

  - name: Make sure a service unit is running
    ansible.builtin.systemd:
      state: started
      name: crond




  - name: Apply Nginx template without SSL
    template:
      src: files/nginx.conf.j2
      dest: /etc/nginx/conf.d/{{ domain_name }}.conf
    notify: Reload Nginx

  - name: Create ssl directory 
    file:
      path: /etc/nginx/ssl
      state: directory

  - name: Download and install acme.sh
    shell: "curl https://get.acme.sh | sh -s email=root@{{ domain_name }}"

  - name: Get SSL certificate
    shell: "~/.acme.sh/acme.sh --issue --nginx -d {{ domain_name }}" #--server  letsencrypt"

  - name: Install certificate and reload nginx
    shell: |
      ~/.acme.sh/acme.sh --install-cert -d {{ domain_name }} \
      --key-file       /etc/nginx/ssl/key.pem  \
      --fullchain-file /etc/nginx/ssl/cert.crt \
      --reloadcmd     "service nginx force-reload"

  - name: Apply Nginx template with SSL
    template:
      src: files/nginx-ssl.conf.j2
      dest: /etc/nginx/conf.d/{{ domain_name }}.conf
    notify: Reload Nginx


    